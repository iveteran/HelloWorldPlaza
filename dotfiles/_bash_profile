# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
	. ~/.bashrc
fi

if [[ "$TERM" = "linux" && -e `which fbterm` ]]; then
    fbterm
fi

# User specific environment and startup programs

export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

PATH=$PATH:$HOME/.local/bin:$HOME/bin:/sbin:/usr/sbin:/snap/bin

# Golang environment
[ -d /opt/go/bin ] && PATH=$PATH:/opt/go/bin
export GOPATH=/opt/yuu/go
[ -d $GOPATH ] && PATH=$PATH:"$GOPATH/bin"

PATH=$PATH:/opt/AppImage

export PATH

alias ls='ls --color=auto'
alias ll='ls -l -rt'
alias la='ls -a'
alias l.='ls -ld .?*'
alias lf.='find . -maxdepth 1 -type f -name ".*"'
alias grep='grep --color=auto --exclude-dir=".git"'
alias diff='diff --color'
alias man='man -P less'
alias tree='tree -C'  # colorization
alias tree-with-time-size='tree -stD'  # show time and size, order by time
alias cat='cat -v'
#alias rsync='rsync -avzP'
alias rsync='rsync -az --info=progress2'
alias pls='sudo $(fc -ln -1)'
alias sudo='sudo env PATH=$PATH'
alias bat='batcat'
alias apt-search="apt search --names-only"
alias chrome-proxy="google-chrome --proxy-server='127.0.0.1:7891'"
alias jf="python3 -mjson.tool --indent 2 --no-ensure-ascii"
jf_bat() {
  local file=$1
  jf $file | bat -l json
}

# Aliases to optn Tmux with session name
alias tls='tmux ls'
alias tmain='tmux attach -t Main || tmux new -s Main'
alias tcoding='tmux attach -t Coding || tmux new -s Coding'
alias tmatrix='tmux attach -t Matrix || tmux new -s Matrix'
alias ttty='tmux attach -t TTY || tmux new -s TTY'

# Aliases to open Tmux popup window, Tmux version >= 3.2
#alias p='tmux popup -w 70% -h 70%'
#alias pp='tmux popup -w 80% -h 80% "tmux attach -t popup || tmux new -s popup"'

# Tmuxifier
## git clone https://github.com/jimeh/tmuxifier.git ~/.tmuxifier
##export PATH=$PATH:$HOME/.tmuxifier/bin
#export PATH=$PATH:$HOME/.tmux/plugins/tmuxifier/bin
#eval "$(tmuxifier init -)"

export EDITOR='vim'
export PAGER='less'
#export PAGER='most'
#
export HISTTIMEFORMAT='[%F %T] '
#export HISTCONTROL=ignorespace
#export HISTCONTROL=ignoredups
export HISTCONTROL=ignoreboth # both ignore space and dups

export SYSTEMD_EDITOR='vim'
export PSQL_EDITOR="vim -c 'set syntax=sql'"

set -o vi
stty -ixon  # Enable searching history in Bash forward after backward with CTRL-S

if [ -f /usr/bin/virtualenvwrapper.sh ]; then
    . /usr/bin/virtualenvwrapper.sh
fi

if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# Enable use GUI apps on WSL by VcXsrv for Windows 10
# Refers:
#   1) https://techcommunity.microsoft.com/t5/windows-dev-appconsult/running-wsl-gui-apps-on-windows-10/ba-p/1493242
#   2) https://sourceforge.net/projects/vcxsrv/
#export DISPLAY="`grep nameserver /etc/resolv.conf | sed 's/nameserver //'`:0"
export DISPLAY=":0"

# Rust environment
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"


# 配置 GOPROXY 环境变量
#export GOPROXY=https://proxy.golang.com.cn,direct
#export GOPROXY=https://jp.iveteran.me:4433,direct
# # 还可以设置不走 proxy 的私有仓库或组，多个用逗号相隔（可选）
# export GOPRIVATE=git.mycompany.com,github.com/my/private

# GnuPG
export GPG_TTY=$(tty)

# Install: apt install keychian
if [ -f $HOME/.ssh/iv.id_rsa ]; then
    keychain $HOME/.ssh/iv.id_rsa
    source $HOME/.keychain/$HOSTNAME-sh
fi

#source ~/.profile_proxy
source ~/.bash_prompt
source ~/.fzfrc.sh

# x-cmd
# Repo: https://github.com/x-cmd/x-cmd
# Install: eval "$(curl https://get.x-cmd.com)"
#[ ! -f "$HOME/.x-cmd.root/X" ] || . "$HOME/.x-cmd.root/X" # boot up x-cmd.
