FFmpeg 视频处理入门教程
Ref: [https://ruanyifeng.com/blog/2020/01/ffmpeg.html]

1. 查看FFmpeg支持的容器
$ ffmpeg -formats

2. 查看FFmpeg支持的编码格式
$ ffmpeg -codecs

3. 查看FFmpeg已安装的编码器
$ ffmpeg -encoders

4. 查看文件信息
$ ffmpeg -i input.mp4 -hide_banner

5. FFmpeg 的命令行参数非常多，可以分成五个部分。

$ ffmpeg {1} {2} -i {3} {4} {5}

上面命令中，五个部分的参数依次如下。
全局参数
输入文件参数
输入文件
输出文件参数
输出文件

$ ffmpeg [全局参数] [输入文件参数] -i [输入文件] [输出文件参数] [输出文件]

下面是一个例子。
$ ffmpeg \
-y \ # 全局参数
-c:a libfdk_aac -c:v libx264 \ # 输入文件参数
-i input.mp4 \ # 输入文件
-c:v libvpx-vp9 -c:a libvorbis \ # 输出文件参数
output.webm # 输出文件
上面的命令将 mp4 文件转成webm文件，这两个都是容器格式。输入的 mp4 文件的音频编码格式是 aac，视频编码格式是 H.264；输出的 webm 文件的视频编码格式是 VP9，音频格式是 Vorbis。

如果不指明编码格式，FFmpeg 会自己判断输入文件的编码。因此，上面的命令可以简单写成下面的样子。
$ ffmpeg -i input.avi output.mp4

6. 常用命令行参数

-c：指定编码器
-c copy：直接复制，不经过重新编码（这样比较快）
-c:v：指定视频编码器
-c:a：指定音频编码器
-i：指定输入文件
-an：去除音频流
-vn： 去除视频流
-preset：指定输出的视频质量，会影响文件的生成速度，有以下几个可用的值 ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow。
-y：不经过确认，输出时直接覆盖同名文件。

7. 转换编码格式(transcoding)
将视频文件从一种编码转成另一种编码。如下转成H.264和H.265编码
$ ffmpeg -i [input.file] -c:v libx264 output.mp4
$ ffmpeg -i [input.file] -c:v libx265 output.mp4

8. 转换容器格式(transmuxing)
如下面是将mp4转为webm
$ ffmpeg -i input.mp4 -c copy output.webm

9. 调整码率(transrating)
改变编码的比特率，一般用来将视频文件的体积变小。
下面的例子指定码率最小为964K，最大为3856K，缓冲区大小为2000K。
$ ffmpeg -i input.mp4 -minrate 964K -maxrate 3856K -bufsize 2000K output.mp4

10. 改变分辨率(transsizing)
下面是改变视频分辨率的例子，从1080p转为480p。
$ ffmpeg -i input.mp4 -vf scale=480:-1 output.mp4

11. 提取音频(demuxing)
$ ffmpeg -i input.mp4 -vn -c:a copy output.aac

12. 添加音轨(muxing)
将外部音频加入视频，比如添加背景音乐或旁白
$ ffmpeg -i input.aac -i input.mp4 output.mp4

13. 截图(capturing)
如下从指定时间开始，连续对1秒钟的视频进行截图
$ ffmpeg -y -i input.mp4 -ss 00:01:24 -t 00:00:01 output_%3d.jpg

如下截一张图，可以指定只截取一帧
$ ffmpeg -ss 01:23:45 -i input -vframes 1 -q:v 2 output.jpg
-vframes 1指定只截取一帧，-q:v 2表示输出的图片质量，一般是1到5之间（1 为质量最高）

14. 裁剪(cutting)
$ ffmpeg -ss [start] -i [input] -t [duration] -c copy [output]
$ ffmpeg -ss [start] -i [input] -to [end] -c copy [output]
如下示例：
$ ffmpeg -ss 00:01:50 -i [input] -t 10.5 -c copy [output]
$ ffmpeg -ss 2.5 -i [input] -to 10 -c copy [output]
-c copy表示不改变音频和视频的编码格式，直接拷贝，这样会快很多

15. 为音频添加封面
$ ffmpeg -loop 1 -i cover.jpg -i input.mp3 -c:v libx264 -c:a aac -b:a 192k -shortest output.mp4
-loop 1参数表示图片无限循环，-shortest参数表示音频文件结束，输出视频就结束
