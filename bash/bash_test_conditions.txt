Test conditions in bash
Ref: [https://linuxhandbook.com/if-else-bash/]

There are numerous test conditions that you can use with if statements. Test
conditions varies if you are working with numbers, strings, or files. Think of
them as logical operators in bash.

I have included some of the most popular test conditions in the table below:

Condition Equivalent
$a -lt $b $a < $b
$a -gt $b $a > $b
$a -le $b $a <= $b
$a -ge $b $a >= $b
$a -eq $b $a is equal to $b
$a -ne $b $a is not equal to $b
-e $FILE  $FILE exists
-d $FILE  $FILE exists and is a directory.
-f $FILE  $FILE exists and is a regular file.
-L $FILE  $FILE exists and is a soft link.
$STRING1 = $STRING2 $STRING1 is equal to $STRING2
$STRING1 != $STRING2  $STRING1 is not equal to $STRING2
-z "$STRING1" $STRING1 is empty
-n "$STRING1" $STRING1 is not empty

The -n option is essentially the opposite of the -z option. While -z checks if a string is null or empty, -n checks if a string is not null. Hereâ€™s an example:
name="John"
if [ -n "$name" ]
then
  echo "Name is not empty"
else
  echo "Name is empty"
fi

# Output:
# Name is not empty
